// <auto-generated />
using System;
using Keyboard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Keyboard.Migrations
{
    [DbContext(typeof(PurchasesContext))]
    [Migration("20230331182427_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Keyboard.Models.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("Keyboard.Models.Contract", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<string>("CurrentContractStage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<string>("DocumentBase")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ExecutionDateId")
                        .HasColumnType("integer");

                    b.Property<int>("FinancesId")
                        .HasColumnType("integer");

                    b.Property<int?>("FoundationId")
                        .HasColumnType("integer");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("PrintFormId")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductsId")
                        .HasColumnType("integer");

                    b.Property<string>("ProtocolDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SchemeVersion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SignDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SingleCustomerReasonId")
                        .HasColumnType("text");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("integer");

                    b.Property<string>("VersionNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ExecutionDateId");

                    b.HasIndex("FinancesId");

                    b.HasIndex("FoundationId");

                    b.HasIndex("PrintFormId");

                    b.HasIndex("ProductsId");

                    b.HasIndex("SingleCustomerReasonId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Keyboard.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CountryFullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("Keyboard.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Keyboard.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("LegalFormId")
                        .HasColumnType("integer");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LegalFormId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Keyboard.Models.ExecutionDate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ExecutionDate");
                });

            modelBuilder.Entity("Keyboard.Models.Extrabudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("Keyboard.Models.Extrabudgetary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("KOSGU")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubstageMonth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SubstageYear")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Budgetary");
                });

            modelBuilder.Entity("Keyboard.Models.Finances", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ExtrabudgetId")
                        .HasColumnType("integer");

                    b.Property<int?>("ExtrabudgetaryId")
                        .HasColumnType("integer");

                    b.Property<string>("FinanceSource")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ExtrabudgetId");

                    b.HasIndex("ExtrabudgetaryId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("Keyboard.Models.Foundation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("OosOrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OosOrderId");

                    b.ToTable("Foundations");
                });

            modelBuilder.Entity("Keyboard.Models.LegalForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("integer");

                    b.Property<string>("SingularName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LegalForms");
                });

            modelBuilder.Entity("Keyboard.Models.OKEI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OKEI");
                });

            modelBuilder.Entity("Keyboard.Models.OKPD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OKPD");
                });

            modelBuilder.Entity("Keyboard.Models.OosOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Chardata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LotNumbert")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NotificationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placing")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OosOrder");
                });

            modelBuilder.Entity("Keyboard.Models.PrintForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("SignatureId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("SignatureId");

                    b.ToTable("PrintForms");
                });

            modelBuilder.Entity("Keyboard.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("OKEIId")
                        .HasColumnType("integer");

                    b.Property<int?>("OKPDId")
                        .HasColumnType("integer");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ProductsId")
                        .HasColumnType("integer");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OKEIId");

                    b.HasIndex("OKPDId");

                    b.HasIndex("ProductsId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Keyboard.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Keyboard.Models.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Signature");
                });

            modelBuilder.Entity("Keyboard.Models.SingleCustomerReason", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SingleCustomerReason");
                });

            modelBuilder.Entity("Keyboard.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactEMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactFax")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("FactualAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParticipantType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PostAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("SuppliersId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryId");

                    b.HasIndex("SuppliersId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("Keyboard.Models.Suppliers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Keyboard.Models.Contract", b =>
                {
                    b.HasOne("Keyboard.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("Keyboard.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("Keyboard.Models.ExecutionDate", "ExecutionDate")
                        .WithMany()
                        .HasForeignKey("ExecutionDateId");

                    b.HasOne("Keyboard.Models.Finances", "Finances")
                        .WithMany()
                        .HasForeignKey("FinancesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Keyboard.Models.Foundation", "Foundation")
                        .WithMany()
                        .HasForeignKey("FoundationId");

                    b.HasOne("Keyboard.Models.PrintForm", "PrintForm")
                        .WithMany()
                        .HasForeignKey("PrintFormId");

                    b.HasOne("Keyboard.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductsId");

                    b.HasOne("Keyboard.Models.SingleCustomerReason", "SingleCustomerReason")
                        .WithMany()
                        .HasForeignKey("SingleCustomerReasonId");

                    b.HasOne("Keyboard.Models.Suppliers", "Suppliers")
                        .WithMany()
                        .HasForeignKey("SuppliersId");

                    b.Navigation("Currency");

                    b.Navigation("Customer");

                    b.Navigation("ExecutionDate");

                    b.Navigation("Finances");

                    b.Navigation("Foundation");

                    b.Navigation("PrintForm");

                    b.Navigation("Products");

                    b.Navigation("SingleCustomerReason");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("Keyboard.Models.Customer", b =>
                {
                    b.HasOne("Keyboard.Models.LegalForm", "LegalForm")
                        .WithMany()
                        .HasForeignKey("LegalFormId");

                    b.Navigation("LegalForm");
                });

            modelBuilder.Entity("Keyboard.Models.Finances", b =>
                {
                    b.HasOne("Keyboard.Models.Extrabudget", "Extrabudget")
                        .WithMany()
                        .HasForeignKey("ExtrabudgetId");

                    b.HasOne("Keyboard.Models.Extrabudgetary", "Extrabudgetary")
                        .WithMany()
                        .HasForeignKey("ExtrabudgetaryId");

                    b.Navigation("Extrabudget");

                    b.Navigation("Extrabudgetary");
                });

            modelBuilder.Entity("Keyboard.Models.Foundation", b =>
                {
                    b.HasOne("Keyboard.Models.OosOrder", "OosOrder")
                        .WithMany()
                        .HasForeignKey("OosOrderId");

                    b.Navigation("OosOrder");
                });

            modelBuilder.Entity("Keyboard.Models.PrintForm", b =>
                {
                    b.HasOne("Keyboard.Models.Signature", "Signature")
                        .WithMany()
                        .HasForeignKey("SignatureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Signature");
                });

            modelBuilder.Entity("Keyboard.Models.Product", b =>
                {
                    b.HasOne("Keyboard.Models.OKEI", "OKEI")
                        .WithMany()
                        .HasForeignKey("OKEIId");

                    b.HasOne("Keyboard.Models.OKPD", "OKPD")
                        .WithMany()
                        .HasForeignKey("OKPDId");

                    b.HasOne("Keyboard.Models.Products", null)
                        .WithMany("Product")
                        .HasForeignKey("ProductsId");

                    b.Navigation("OKEI");

                    b.Navigation("OKPD");
                });

            modelBuilder.Entity("Keyboard.Models.Supplier", b =>
                {
                    b.HasOne("Keyboard.Models.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("Keyboard.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");

                    b.HasOne("Keyboard.Models.Suppliers", null)
                        .WithMany("Supplier")
                        .HasForeignKey("SuppliersId");

                    b.Navigation("ContactInfo");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Keyboard.Models.Products", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Keyboard.Models.Suppliers", b =>
                {
                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
